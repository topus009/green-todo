{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","js/components/common/TextInput.js","js/pages/Auth.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","TextInput","onBlur","onChange","autoFocus","placeholder","type","className","e","target","defaultProps","Auth","signUp","loading","useState","email","setEmail","password","setPassword","onClick","disabled","trim","connect","auth","dispatch","params"],"mappings":"6FAGe,SAASA,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,GAJhE,mC,gCIAA,oBAmBMC,EAAY,SAAC,GAA+D,IAA7DJ,EAA4D,EAA5DA,MAAOK,EAAqD,EAArDA,OAAQC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAEpE,OACE,2BACEA,KAAMA,EACNC,UAAU,aACVV,MAAOA,EACPM,SANiB,SAAAK,GAAC,OAAIL,EAASK,EAAEC,OAAOZ,QAOxCK,OAAQA,EACRE,UAAWA,EACXC,YAAaA,KAMnBJ,EAAUS,aAvBW,CACnBN,WAAW,EACXC,YAAa,GACbC,KAAM,OACNJ,OAAQ,kBAAM,IAqBDD,O,mGCrBTU,EAAO,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAAc,EACVC,mBAAS,IADC,mBAC7BC,EAD6B,KACtBC,EADsB,OAEJF,mBAAS,IAFL,mBAE7BG,EAF6B,KAEnBC,EAFmB,KAQpC,OACE,oCACIL,EASA,kBAAC,IAAD,MARA,yBAAKN,UAAU,QACb,kBAAC,IAAD,CAAWV,MAAOkB,EAAOZ,SAAU,SAAAN,GAAK,OAAImB,EAASnB,IAAQQ,YAAY,UACzE,kBAAC,IAAD,CAAWR,MAAOoB,EAAUd,SAAU,SAAAN,GAAK,OAAIqB,EAAYrB,IAAQQ,YAAY,WAAWC,KAAK,aAC/F,4BAAQA,KAAK,SAASa,QAVT,kBAAMP,EAAO,CAAEG,QAAOE,cAUUG,UARxBL,EAAMM,OAAOvB,SAAWmB,EAASI,OAAOvB,QAQ7D,mHAyBVa,EAAKD,aA3CgB,CACnBG,SAAS,GA4CIS,uBAhBS,SAAC,GAEvB,MAAO,CACLT,QAHkC,EAAXU,KACjBV,YAMiB,SAAAW,GACzB,MAAO,CACLZ,OAAQ,SAAAa,GAAM,OAAID,EAASZ,YAAOa,QAOvBH,CAA6CX","file":"static/js/4.45bb9f62.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react';\nimport { string, bool, func } from 'prop-types';\n\nconst propTypes = {\n  value: string.isRequired,\n  onBlur: func,\n  onChange: func.isRequired,\n  autoFocus: bool,\n  placeholder: string,\n  type: string,\n};\n\nconst defaultProps = {\n  autoFocus: false,\n  placeholder: '',\n  type: 'text',\n  onBlur: () => false,\n};\n\nconst TextInput = ({ value, onBlur, onChange, autoFocus, placeholder, type }) => {\n  const handleChange = e => onChange(e.target.value);\n  return (\n    <input\n      type={type}\n      className=\"text_input\"\n      value={value}\n      onChange={handleChange}\n      onBlur={onBlur}\n      autoFocus={autoFocus}\n      placeholder={placeholder}\n    />\n  );\n};\n\nTextInput.propTypes = propTypes;\nTextInput.defaultProps = defaultProps;\n\nexport default TextInput;\n","import React, { useState } from 'react';\nimport { bool, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { signUp } from '../redux/actions/AuthActions';\nimport TextInput from '../components/common/TextInput';\nimport Loader from '../components/common/Loader';\n\nconst propTypes = {\n  signUp: func.isRequired,\n  loading: bool,\n};\n\nconst defaultProps = {\n  loading: false,\n};\n\nconst Auth = ({ signUp, loading }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = () => signUp({ email, password });\n\n  const isBtnDisabled = () => !email.trim().length || !password.trim().length;\n\n  return (\n    <>\n      {!loading ? (\n        <div className=\"auth\">\n          <TextInput value={email} onChange={value => setEmail(value)} placeholder=\"email\" />\n          <TextInput value={password} onChange={value => setPassword(value)} placeholder=\"password\" type=\"password\" />\n          <button type=\"button\" onClick={handleSubmit} disabled={isBtnDisabled()}>\n            Зарегистрироваться\n          </button>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ auth }) => {\n  const { loading } = auth;\n  return {\n    loading,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: params => dispatch(signUp(params)),\n  };\n};\n\nAuth.propTypes = propTypes;\nAuth.defaultProps = defaultProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n"],"sourceRoot":""}