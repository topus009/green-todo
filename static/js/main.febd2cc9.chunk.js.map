{"version":3,"sources":["js/constants/App.js","js/hoc/withAuth.js","js/components/Header.js","js/routes/routes.js","js/config/theme.js","js/constants/Auth.js","js/config/constants.js","js/reducers/app.js","js/reducers/auth.js","js/reducers/index.js","js/common/Loader.js","js/actions/AuthActions.js","js/store/store.js","js/store/enhansers/setToken.js","js/store/enhansers/setUserInfo.js","js/routes/index.js","js/store/index.js","js/hoc/ErrorBoundary.js","js/containers/App.js","serviceWorker.js","index.js"],"names":["keyMirror","PENDING","GETTODOS","GETTODOSERROR","CHANGETODOTITLE","TOGGLETODOCOMPLETED","withAuth","WrappedComponent","connect","authenticated","auth","props","useEffect","history","push","Header","user","className","UserName","Auth","lazy","Todos","createHashHistory","basename","htmlAttributes","class","fallback","Loader","exact","path","component","AUTH_TOKEN","AUTH_USER","AUTH_ERROR","AUTH_REQUEST","dbPrefix","token","constants","initialState","todos","loading","combineReducers","state","action","payload","type","error","app","forEach","todo","ID","Title","value","newTodos","id","Completed","axios","axio","create","baseURL","authError","signUp","email","password","dispatch","post","Password","then","localStorage","setItem","fakeToken","err","getUser","get","data","composeEnhancers","compose","configureStore","logger","createLogger","store","createStore","rootReducer","applyMiddleware","thunk","setToken","setUserInfo","module","hot","accept","nextRootReducer","require","replaceReducer","next","getItem","routes","ErrorBoundary","errorInfo","this","setState","children","toString","componentStack","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.febd2cc9.chunk.js","sourcesContent":["import keyMirror from 'keymirror';\n\nexport default keyMirror({\n  PENDING: null,\n  GETTODOS: null,\n  GETTODOSERROR: null,\n  CHANGETODOTITLE: null,\n  TOGGLETODOCOMPLETED: null,\n});\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nconst withAuth = WrappedComponent => {\n  const Authentication = props => {\n    useEffect(() => {\n      const { authenticated, history } = props;\n      !authenticated && history.push('/');\n    });\n    return <WrappedComponent {...props} />;\n  };\n\n  const mapStateToProps = ({ auth }) => {\n    const { authenticated } = auth;\n    return {\n      authenticated,\n    };\n  };\n\n  return connect(mapStateToProps)(Authentication);\n};\n\nexport default withAuth;\n","import React from 'react';\n\nconst Header = ({ user }) => (\n  <nav className=\"header\">\n    <div className=\"user\">{user.UserName}</div>\n  </nav>\n);\n\nexport default Header;\n","import React, { lazy, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { createHashHistory } from 'history';\nimport { defaultTheme } from '../config/theme';\nimport Loader from '../common/Loader';\nimport withAuth from '../hoc/withAuth';\nimport Header from '../components/Header';\n\nconst Auth = lazy(() => import('../pages/Auth'));\nconst Todos = lazy(() => import('../pages/Todos'));\n\nexport const history = createHashHistory();\n\nconst AppRouter = ({ user }) => (\n  <Router history={history} basename=\"/green-todo\">\n    <Helmet htmlAttributes={{ class: `theme-${defaultTheme}` }} />\n    <Suspense fallback={<Loader />}>\n      {user && <Header user={user} />}\n      <Switch>\n        <Route exact path=\"/\" component={Auth} />\n        <Route exact path=\"/todos\" component={withAuth(Todos)} />\n      </Switch>\n    </Suspense>\n  </Router>\n);\n\nconst mapStateToProps = ({ auth }) => {\n  const { user } = auth;\n  return {\n    user,\n  };\n};\n\nexport default connect(mapStateToProps)(AppRouter);\n","export const defaultTheme = 1;\n","import keyMirror from 'keymirror';\n\nexport default keyMirror({\n  AUTH_TOKEN: null,\n  AUTH_USER: null,\n  AUTH_ERROR: null,\n  AUTH_REQUEST: null,\n});\n","export const dbPrefix = 'https://fakerestapi.azurewebsites.net/api';\nexport const STATIC_PATH = process.env.NODE_ENV === 'production' ? '/public' : '';\nexport const token =\n  'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1YTVlZTUxOWQ3NDg4MzAwMTIzMzRmZDgiLCJpYXQiOjE1NzMzNDA5NDIyNDMsImV4cCI6MTU3NTkzMjk0MjI0M30.itWcbMuYF3rvfQH4FDNSDtiaLRksg_TEPhMiOQN1k0M';\n","import constants from '../constants/App';\n\nconst { GETTODOS, PENDING, CHANGETODOTITLE, TOGGLETODOCOMPLETED } = constants;\n\nexport const initialState = {\n  todos: {},\n  loading: false,\n};\n\nexport default function app(state = initialState, action) {\n  const { payload, type } = action;\n  if (type === GETTODOS) {\n    const todos = {};\n    payload.forEach(todo => {\n      todos[todo.ID] = todo;\n    });\n    return {\n      ...state,\n      todos,\n      loading: false,\n    };\n  }\n  if (type === PENDING) {\n    return {\n      ...state,\n      loading: true,\n    };\n  }\n  if (type === CHANGETODOTITLE) {\n    const { todos } = state;\n    return {\n      ...state,\n      todos: {\n        ...todos,\n        [payload.ID]: {\n          ...todos[payload.ID],\n          Title: payload.value,\n        },\n      },\n    };\n  }\n  if (type === TOGGLETODOCOMPLETED) {\n    const { todos } = state;\n    const newTodos = { ...todos };\n    payload.forEach(id => {\n      newTodos[id] = {\n        ...newTodos[id],\n        Completed: !newTodos[id].Completed,\n      };\n    });\n    return {\n      ...state,\n      todos: newTodos,\n    };\n  }\n  return state;\n}\n","import constants from '../constants/Auth';\n\nconst { AUTH_TOKEN, AUTH_ERROR, AUTH_USER, AUTH_REQUEST } = constants;\n\nconst initialState = {\n  loading: false,\n};\n\nexport default function auth(state = initialState, action) {\n  const { payload, type } = action;\n  if (type === AUTH_REQUEST) {\n    return {\n      ...state,\n      loading: true,\n    };\n  }\n  if (type === AUTH_TOKEN) {\n    return {\n      ...state,\n      authenticated: true,\n      loading: false,\n      error: '',\n    };\n  }\n  if (type === AUTH_USER) {\n    return {\n      ...state,\n      user: payload,\n    };\n  }\n  if (type === AUTH_ERROR) {\n    return {\n      ...state,\n      loading: false,\n      error: payload,\n    };\n  }\n  return state;\n}\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport auth from './auth';\n\nexport default combineReducers({\n  auth,\n  app,\n});\n","import React from 'react';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <div className=\"circle c_1\" />\n    <div className=\"circle c_2\" />\n    <div className=\"circle c_3\" />\n  </div>\n);\n\nexport default Loader;\n","import axio from 'axios';\nimport { dbPrefix, token as fakeToken } from '../config/constants';\nimport constants from '../constants/Auth';\n\nconst { AUTH_TOKEN, AUTH_USER, AUTH_ERROR, AUTH_REQUEST } = constants;\n\nconst axios = axio.create({\n  baseURL: dbPrefix,\n});\n\nexport function authError(error) {\n  return {\n    type: AUTH_ERROR,\n    payload: error,\n  };\n}\n\nexport function signUp({ email, password }) {\n  return dispatch => {\n    dispatch({ type: AUTH_REQUEST });\n    axios\n      .post('/Users', {\n        UserName: email,\n        Password: password,\n      })\n      .then(() => {\n        localStorage.setItem('token', fakeToken);\n        dispatch({ type: AUTH_TOKEN });\n      })\n      .catch(err => dispatch(authError(err)));\n  };\n}\n\nexport function getUser(/* token */) {\n  return dispatch => {\n    axios\n      .get(`/Users/${1}`)\n      .then(({ data }) => {\n        dispatch({ type: AUTH_USER, payload: data });\n      })\n      .catch(err => {\n        dispatch(authError(err));\n      });\n  };\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\nimport setToken from './enhansers/setToken';\nimport setUserInfo from './enhansers/setUserInfo';\n\nconst composeEnhancers =\n  !PRODUCTION && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nexport default function configureStore(initialState) {\n  const logger = createLogger();\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk, logger, setToken, setUserInfo))\n  );\n\n  module.hot?.accept('../reducers', () => {\n    const nextRootReducer = require('../reducers');\n    store.replaceReducer(nextRootReducer);\n  });\n  return store;\n}\n","import constants from '../../constants/Auth';\nimport { getUser } from '../../actions/AuthActions';\n\nconst { AUTH_TOKEN } = constants;\n\nconst setToken = store => next => action => {\n  const { type } = action;\n  if (type === AUTH_TOKEN) {\n    const token = localStorage.getItem('token');\n    token && store.dispatch(getUser(token));\n  }\n  return next(action);\n};\n\nexport default setToken;\n","import constants from '../../constants/Auth';\nimport { history } from '../../routes/routes';\n\nconst { AUTH_USER } = constants;\n\nconst setUserInfo = () => next => action => {\n  const { type } = action;\n  if (type === AUTH_USER) {\n    history.push('/todos');\n  }\n  return next(action);\n};\n\nexport default setUserInfo;\n","import routes from './routes';\n\nexport default routes;\n","import store from './store';\n\nexport default store;\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    const { error, errorInfo } = this.state;\n    const { children } = this.props;\n    if (errorInfo) {\n      return (\n        <div className=\"errorBoundary\">\n          <h2>Something went wrong.</h2>\n          <details>\n            {error?.toString()}\n            <br />\n            {errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport AppRouter from '../routes';\nimport configureStore from '../store';\nimport constants from '../constants/Auth';\nimport ErrorBoundary from '../hoc/ErrorBoundary';\n\nconst { AUTH_TOKEN } = constants;\n\nexport const store = configureStore();\n\nconst token = localStorage.getItem('token');\n\nif (token) {\n  store.dispatch({ type: AUTH_TOKEN });\n}\n\nconst App = () => {\n  return (\n    <ErrorBoundary>\n      <Provider store={store}>\n        <AppRouter />\n      </Provider>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.sass';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}