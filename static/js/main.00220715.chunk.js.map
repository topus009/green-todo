{"version":3,"sources":["js/redux/constants/App.js","js/components/Header.js","js/hoc/withAuth.js","js/router/routes.js","js/router/router.js","js/config/theme.js","js/config/constants.js","js/redux/constants/Auth.js","js/redux/reducers/app.js","js/redux/reducers/auth.js","js/redux/reducers/index.js","js/api/api.js","js/api/index.js","js/components/common/Loader.js","js/redux/actions/AuthActions.js","js/redux/store/store.js","js/redux/enhansers/setToken.js","js/redux/enhansers/setUserInfo.js","js/router/index.js","js/redux/store/index.js","js/hoc/ErrorBoundary.js","js/containers/App.js","serviceWorker.js","index.js"],"names":["keyMirror","PENDING","GETTODOS","GETTODOSERROR","CHANGETODOTITLE","TOGGLETODOCOMPLETED","Header","user","className","UserName","withAuth","WrappedComponent","connect","authenticated","auth","props","to","Auth","lazy","Todos","Routes","exact","path","component","history","createHashHistory","basename","htmlAttributes","class","fallback","Loader","dbPrefix","token","AUTH_TOKEN","AUTH_USER","AUTH_ERROR","AUTH_REQUEST","constants","initialState","todos","loading","combineReducers","state","action","payload","type","error","app","forEach","todo","ID","Title","value","newTodos","id","Completed","axios","axio","create","baseURL","signUp","params","post","then","getUser","get","data","getTodos","Api","authError","email","password","dispatch","Password","localStorage","setItem","fakeToken","err","composeEnhancers","compose","configureStore","logger","createLogger","store","createStore","rootReducer","applyMiddleware","thunk","setToken","setUserInfo","module","hot","accept","nextRootReducer","require","replaceReducer","next","getItem","location","pathname","push","router","ErrorBoundary","errorInfo","this","setState","children","toString","componentStack","Component","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00220715.chunk.js","sourcesContent":["import keyMirror from 'keymirror';\n\nexport default keyMirror({\n  PENDING: null,\n  GETTODOS: null,\n  GETTODOSERROR: null,\n  CHANGETODOTITLE: null,\n  TOGGLETODOCOMPLETED: null,\n});\n","import React from 'react';\nimport { shape, string, number, bool } from 'prop-types';\n\nconst propTypes = {\n  user: shape({\n    ID: number,\n    UserName: string.isRequired,\n    DueDate: string,\n    Completed: bool,\n  }),\n};\n\nconst Header = ({ user }) => (\n  <nav className=\"header\">\n    <div className=\"user\">{user.UserName}</div>\n  </nav>\n);\n\nHeader.propTypes = propTypes;\n\nexport default Header;\n","import React from 'react';\nimport { bool } from 'prop-types';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\n\nconst propTypes = {\n  authenticated: bool,\n};\n\nconst withAuth = WrappedComponent => {\n  const Authentication = props => {\n    const { authenticated } = props;\n    return authenticated ? <WrappedComponent {...props} /> : <Redirect to=\"/\" />;\n  };\n\n  const mapStateToProps = ({ auth }) => {\n    const { authenticated } = auth;\n    return {\n      authenticated,\n    };\n  };\n\n  Authentication.propTypes = propTypes;\n\n  return connect(mapStateToProps)(Authentication);\n};\n\nexport default withAuth;\n","import React, { lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport withAuth from '../hoc/withAuth';\n\nconst Auth = lazy(() => import('../pages/Auth'));\nconst Todos = lazy(() => import('../pages/Todos'));\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Auth} />\n    <Route exact path=\"/todos\" component={withAuth(Todos)} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { Suspense } from 'react';\nimport { shape, string, number, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { Router as ReactRouter } from 'react-router-dom';\nimport { createHashHistory } from 'history';\nimport { defaultTheme } from '../config/theme';\nimport Loader from '../components/common/Loader';\nimport Header from '../components/Header';\nimport Routes from './routes';\n\nexport const history = createHashHistory();\n\nconst propTypes = {\n  user: shape({\n    ID: number,\n    UserName: string.isRequired,\n    DueDate: string,\n    Completed: bool,\n  }),\n};\n\nconst AppRouter = ({ user }) => (\n  <ReactRouter history={history} basename=\"/green-todo\">\n    <Helmet htmlAttributes={{ class: `theme-${defaultTheme}` }} />\n    <Suspense fallback={<Loader />}>\n      {user && <Header user={user} />}\n      <Routes />\n    </Suspense>\n  </ReactRouter>\n);\n\nconst mapStateToProps = ({ auth }) => {\n  const { user } = auth;\n  return {\n    user,\n  };\n};\n\nAppRouter.propTypes = propTypes;\n\nexport default connect(mapStateToProps)(AppRouter);\n","export const defaultTheme = 1;\n","export const dbPrefix = 'https://fakerestapi.azurewebsites.net/api';\nexport const STATIC_PATH = process.env.NODE_ENV === 'production' ? '/public' : '';\nexport const token =\n  'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1YTVlZTUxOWQ3NDg4MzAwMTIzMzRmZDgiLCJpYXQiOjE1NzMzNDA5NDIyNDMsImV4cCI6MTU3NTkzMjk0MjI0M30.itWcbMuYF3rvfQH4FDNSDtiaLRksg_TEPhMiOQN1k0M';\n","import keyMirror from 'keymirror';\n\nexport default keyMirror({\n  AUTH_TOKEN: null,\n  AUTH_USER: null,\n  AUTH_ERROR: null,\n  AUTH_REQUEST: null,\n});\n","import constants from '../constants/App';\n\nconst { GETTODOS, PENDING, CHANGETODOTITLE, TOGGLETODOCOMPLETED, GETTODOSERROR } = constants;\n\nexport const initialState = {\n  todos: {},\n  loading: false,\n};\n\nexport default function app(state = initialState, action) {\n  const { payload, type } = action;\n  if (type === GETTODOS) {\n    const todos = {};\n    payload.forEach(todo => {\n      todos[todo.ID] = todo;\n    });\n    return {\n      ...state,\n      todos,\n      loading: false,\n    };\n  }\n  if (type === PENDING) {\n    return {\n      ...state,\n      loading: true,\n    };\n  }\n  if (type === GETTODOSERROR) {\n    return {\n      ...state,\n      loading: false,\n    };\n  }\n  if (type === CHANGETODOTITLE) {\n    const { todos } = state;\n    return {\n      ...state,\n      todos: {\n        ...todos,\n        [payload.ID]: {\n          ...todos[payload.ID],\n          Title: payload.value,\n        },\n      },\n    };\n  }\n  if (type === TOGGLETODOCOMPLETED) {\n    const { todos } = state;\n    const newTodos = { ...todos };\n    payload.forEach(id => {\n      newTodos[id] = {\n        ...newTodos[id],\n        Completed: !newTodos[id].Completed,\n      };\n    });\n    return {\n      ...state,\n      todos: newTodos,\n    };\n  }\n  return state;\n}\n","import constants from '../constants/Auth';\n\nconst { AUTH_TOKEN, AUTH_ERROR, AUTH_USER, AUTH_REQUEST } = constants;\n\nconst initialState = {\n  loading: false,\n};\n\nexport default function auth(state = initialState, action) {\n  const { payload, type } = action;\n  if (type === AUTH_REQUEST) {\n    return {\n      ...state,\n      loading: true,\n    };\n  }\n  if (type === AUTH_TOKEN) {\n    return {\n      ...state,\n      authenticated: true,\n      loading: false,\n      error: '',\n    };\n  }\n  if (type === AUTH_USER) {\n    return {\n      ...state,\n      user: payload,\n    };\n  }\n  if (type === AUTH_ERROR) {\n    return {\n      ...state,\n      loading: false,\n      error: payload,\n    };\n  }\n  return state;\n}\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport auth from './auth';\n\nexport default combineReducers({\n  auth,\n  app,\n});\n","import axio from 'axios';\nimport { dbPrefix } from '../config/constants';\n\nconst axios = axio.create({\n  baseURL: dbPrefix,\n});\n\nexport const auth = {\n  signUp: params => axios.post('/Users', params).then(() => {}),\n  getUser: (id = 1) => axios.get(`/Users/${id}`).then(({ data }) => data),\n};\n\nexport const todos = {\n  getTodos: () => axios.get('/Activities').then(({ data }) => data),\n};\n","import * as Api from './api';\n\nexport default Api;\n","import React from 'react';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <div className=\"circle c_1\" />\n    <div className=\"circle c_2\" />\n    <div className=\"circle c_3\" />\n  </div>\n);\n\nexport default Loader;\n","import Api from '../../api';\nimport { token as fakeToken } from '../../config/constants';\nimport constants from '../constants/Auth';\n\nconst { AUTH_TOKEN, AUTH_USER, AUTH_ERROR, AUTH_REQUEST } = constants;\n\nexport function authError(error) {\n  return {\n    type: AUTH_ERROR,\n    payload: error,\n  };\n}\n\nexport function signUp({ email, password }) {\n  return dispatch => {\n    dispatch({ type: AUTH_REQUEST });\n    Api.auth\n      .signUp({\n        UserName: email,\n        Password: password,\n      })\n      .then(() => {\n        localStorage.setItem('token', fakeToken);\n        dispatch({ type: AUTH_TOKEN });\n      })\n      .catch(err => dispatch(authError(err)));\n  };\n}\n\nexport function getUser(/* token */) {\n  return dispatch => {\n    Api.auth\n      .getUser()\n      .then(data => {\n        dispatch({ type: AUTH_USER, payload: data });\n      })\n      .catch(err => {\n        dispatch(authError(err));\n      });\n  };\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\nimport setToken from '../enhansers/setToken';\nimport setUserInfo from '../enhansers/setUserInfo';\n\nconst composeEnhancers =\n  !PRODUCTION && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nexport default function configureStore(initialState) {\n  const logger = createLogger();\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk, logger, setToken, setUserInfo))\n  );\n\n  module.hot?.accept('../reducers', () => {\n    const nextRootReducer = require('../reducers');\n    store.replaceReducer(nextRootReducer);\n  });\n  return store;\n}\n","import constants from '../constants/Auth';\nimport { getUser } from '../actions/AuthActions';\n\nconst { AUTH_TOKEN } = constants;\n\nconst setToken = store => next => action => {\n  const { type } = action;\n  if (type === AUTH_TOKEN) {\n    const token = localStorage.getItem('token');\n    token && store.dispatch(getUser(token));\n  }\n  return next(action);\n};\n\nexport default setToken;\n","import constants from '../constants/Auth';\nimport { history } from '../../router/router';\n\nconst { AUTH_USER } = constants;\n\nconst targetPath = '/todos';\n\nconst setUserInfo = () => next => action => {\n  const { type } = action;\n  if (type === AUTH_USER && history.location.pathname !== targetPath) {\n    history.push(targetPath);\n  }\n  return next(action);\n};\n\nexport default setUserInfo;\n","import router from './router';\n\nexport default router;\n","import store from './store';\n\nexport default store;\n","import React, { Component } from 'react';\nimport { node } from 'prop-types';\n\nconst propTypes = {\n  children: node.isRequired,\n};\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      errorInfo: null,\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    const { error, errorInfo } = this.state;\n    const { children } = this.props;\n    if (errorInfo) {\n      return (\n        <div className=\"errorBoundary\">\n          <h2>Something went wrong.</h2>\n          <details>\n            {error?.toString()}\n            <br />\n            {errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    return children;\n  }\n}\n\nErrorBoundary.propTypes = propTypes;\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Router from '../router';\nimport configureStore from '../redux/store';\nimport constants from '../redux/constants/Auth';\nimport ErrorBoundary from '../hoc/ErrorBoundary';\n\nconst { AUTH_TOKEN } = constants;\n\nexport const store = configureStore();\n\nconst token = localStorage.getItem('token');\n\nif (token) {\n  store.dispatch({ type: AUTH_TOKEN });\n}\n\nconst App = () => (\n  <ErrorBoundary>\n    <Provider store={store}>\n      <Router />\n    </Provider>\n  </ErrorBoundary>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.sass';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}