{"version":3,"sources":["js/common/Loader.js","js/hoc/withAuth.js","js/components/Header.js","js/config/constants.js","js/constants/Auth.js","js/actions/AuthActions.js","js/common/TextInput.js","js/pages/Auth.js","js/constants/App.js","js/actions/AppActions.js","js/common/EditableCell.js","js/components/Todo.js","js/common/THeadCellWithSoring.js","js/hoc/renderChildrenWithProps.js","js/helpers/sorting.js","js/helpers/common.js","js/pages/Todos.js","js/hooks/useSorting.js","js/routes/routes.js","js/routes/index.js","js/config/theme.js","js/reducers/app.js","js/reducers/auth.js","js/reducers/index.js","js/store/enhansers/setToken.js","js/store/enhansers/setUserInfo.js","js/store/index.js","js/store/store.js","js/hoc/ErrorBoundary.js","js/containers/App.js","serviceWorker.js","index.js"],"names":["Loader","className","withAuth","WrappedComponent","connect","authenticated","auth","props","useEffect","history","push","Header","user","UserName","dbPrefix","token","keyMirror","AUTH_TOKEN","AUTH_USER","AUTH_ERROR","AUTH_REQUEST","constants","axios","axio","create","baseURL","authError","error","type","payload","TextInput","value","onBlur","onChange","autoFocus","placeholder","e","target","loading","dispatch","signUp","params","email","password","post","Password","then","localStorage","setItem","fakeToken","err","useState","setEmail","setPassword","onClick","disabled","trim","length","PENDING","GETTODOS","GETTODOSERROR","CHANGETODOTITLE","TOGGLETODOCOMPLETED","EditableCell","setEditingId","isEditing","ID","onToggleInputFocus","cn","onFocus","Todo","item","Title","DueDate","Completed","onSelect","checked","handleChange","toggleCompleted","momentDate","moment","date","format","time","toString","THeadCellWithSoring","label","sortBy","sortOrder","sortName","handleSort","defaultSortOrder","children","rest","isSorting","classes","iconClasses","sortByCurrent","asc","desc","renderChildrenWithProps","components","map","component","key","cloneElement","sortShouldReturn","order","sortIds","ids","objectWithItems","sortingRules","sorted","sort","aKey","bKey","valueFormatter","aItem","bItem","a","b","convertArrayToString","arr","val","Number","Array","from","replace","each","charCodeAt","join","valueOf","JSON","parse","app","todos","getTodos","get","data","console","changeTodoTitle","toggleTodoCompleted","selectedItems","setSelectedItems","selectedAll","setSelectedAll","defaultSortBy","setSortBy","setSortOrder","by","useSorting","editingId","sortingProps","todosIds","Object","keys","todosLength","isSelected","id","includes","handleSelectItem","filter","newSelectedItems","handleSetEditing","handleToggleTodoCompleted","sortedTodos","stopPropagation","createHashHistory","routes","basename","htmlAttributes","class","exact","path","Auth","Todos","initialState","combineReducers","state","action","forEach","todo","newTodos","setToken","store","next","getItem","setUserInfo","logger","createLogger","createStore","rootReducer","compose","applyMiddleware","thunk","ErrorBoundary","errorInfo","this","setState","componentStack","Component","configureStore","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c79aa634.chunk.js","sourcesContent":["import React from 'react';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <div className=\"circle c_1\" />\n    <div className=\"circle c_2\" />\n    <div className=\"circle c_3\" />\n  </div>\n);\n\nexport default Loader;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nconst withAuth = WrappedComponent => {\n  const Authentication = props => {\n    useEffect(() => {\n      const { authenticated, history } = props;\n      !authenticated && history.push('/');\n    });\n    return <WrappedComponent {...props} />;\n  };\n\n  const mapStateToProps = ({ auth }) => {\n    const { authenticated } = auth;\n    return {\n      authenticated,\n    };\n  };\n\n  return connect(mapStateToProps)(Authentication);\n};\n\nexport default withAuth;\n","import React from 'react';\n\nconst Header = ({ user }) => (\n  <nav className=\"header\">\n    <div className=\"user\">{user.UserName}</div>\n  </nav>\n);\n\nexport default Header;\n","export const dbPrefix = 'https://fakerestapi.azurewebsites.net/api';\nexport const STATIC_PATH = process.env.NODE_ENV === 'production' ? '/public' : '';\nexport const token =\n  'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1YTVlZTUxOWQ3NDg4MzAwMTIzMzRmZDgiLCJpYXQiOjE1NzMzNDA5NDIyNDMsImV4cCI6MTU3NTkzMjk0MjI0M30.itWcbMuYF3rvfQH4FDNSDtiaLRksg_TEPhMiOQN1k0M';\n","import keyMirror from 'keymirror';\n\nexport default keyMirror({\n  AUTH_TOKEN: null,\n  AUTH_USER: null,\n  AUTH_ERROR: null,\n  AUTH_REQUEST: null,\n});\n","import axio from 'axios';\nimport { dbPrefix, token as fakeToken } from '../config/constants';\nimport constants from '../constants/Auth';\n\nconst { AUTH_TOKEN, AUTH_USER, AUTH_ERROR, AUTH_REQUEST } = constants;\n\nconst axios = axio.create({\n  baseURL: dbPrefix,\n});\n\nexport function authError(error) {\n  return {\n    type: AUTH_ERROR,\n    payload: error,\n  };\n}\n\nexport function signUp({ email, password }) {\n  return dispatch => {\n    dispatch({ type: AUTH_REQUEST });\n    axios\n      .post('/Users', {\n        UserName: email,\n        Password: password,\n      })\n      .then(() => {\n        localStorage.setItem('token', fakeToken);\n        dispatch({ type: AUTH_TOKEN });\n      })\n      .catch(err => dispatch(authError(err)));\n  };\n}\n\nexport function getUser(/* token */) {\n  return dispatch => {\n    axios\n      .get(`/Users/${1}`)\n      .then(({ data }) => {\n        dispatch({ type: AUTH_USER, payload: data });\n      })\n      .catch(err => {\n        dispatch(authError(err));\n      });\n  };\n}\n","import React from 'react';\n\nconst TextInput = ({ value, onBlur = () => false, onChange, autoFocus = false, placeholder = '', type = 'text' }) => {\n  const handleChange = e => onChange(e.target.value);\n  return (\n    <input\n      type={type}\n      className=\"text_input\"\n      value={value}\n      onChange={handleChange}\n      onBlur={onBlur}\n      autoFocus={autoFocus}\n      placeholder={placeholder}\n    />\n  );\n};\n\nexport default TextInput;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { signUp } from '../actions/AuthActions';\nimport TextInput from '../common/TextInput';\nimport Loader from '../common/Loader';\n\nconst Auth = ({ signUp, loading }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = () => signUp({ email, password });\n  const isBtnDisabled = () => !email.trim().length || !password.trim().length;\n  return (\n    <>\n      {!loading ? (\n        <div className=\"auth\">\n          <TextInput value={email} onChange={value => setEmail(value)} placeholder=\"email\" />\n          <TextInput value={password} onChange={value => setPassword(value)} placeholder=\"password\" type=\"password\" />\n          <button type=\"button\" onClick={handleSubmit} disabled={isBtnDisabled()}>\n            Зарегистрироваться\n          </button>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ auth }) => {\n  const { loading } = auth;\n  return {\n    loading,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: params => dispatch(signUp(params)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import keyMirror from 'keymirror';\n\nexport default keyMirror({\n  PENDING: null,\n  GETTODOS: null,\n  GETTODOSERROR: null,\n  CHANGETODOTITLE: null,\n  TOGGLETODOCOMPLETED: null,\n});\n","import axio from 'axios';\nimport { dbPrefix } from '../config/constants';\nimport constants from '../constants/App';\n\nconst { GETTODOS, PENDING, CHANGETODOTITLE, TOGGLETODOCOMPLETED, GETTODOSERROR } = constants;\n\nconst axios = axio.create({\n  baseURL: dbPrefix,\n});\n\nexport function getTodos() {\n  return dispatch => {\n    dispatch({ type: PENDING });\n    return axios\n      .get('/Activities')\n      .then(({ data }) => {\n        dispatch({\n          type: GETTODOS,\n          payload: data,\n        });\n      })\n      .catch(err => {\n        console.error({ err });\n        return dispatch({ type: GETTODOSERROR });\n      });\n  };\n}\n\nexport function changeTodoTitle(payload) {\n  return {\n    type: CHANGETODOTITLE,\n    payload,\n  };\n}\n\nexport function toggleTodoCompleted(payload) {\n  return {\n    type: TOGGLETODOCOMPLETED,\n    payload,\n  };\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport TextInput from './TextInput';\n\nconst EditableCell = ({ onChange, value, setEditingId, isEditing, className, ID }) => {\n  const onToggleInputFocus = () => {\n    setEditingId(null);\n    setEditingId(ID);\n  };\n  return (\n    <>\n      {!isEditing ? (\n        <td onClick={onToggleInputFocus} onFocus={onToggleInputFocus} className={className}>\n          {value}\n        </td>\n      ) : (\n        <td className={cn(className, { isEditing })}>\n          <TextInput value={value} onBlur={() => setEditingId(null)} onChange={onChange} />\n        </td>\n      )}\n    </>\n  );\n};\n\nexport default EditableCell;\n","import React from 'react';\nimport cn from 'classnames';\nimport moment from 'moment';\nimport EditableCell from '../common/EditableCell';\n\nconst Todo = ({\n  item: { Title, ID, DueDate, Completed },\n  onSelect,\n  checked,\n  handleChange,\n  setEditingId,\n  isEditing,\n  toggleCompleted,\n}) => {\n  const momentDate = moment(DueDate);\n  const date = momentDate.format('YYYY.MM.DD');\n  const time = momentDate.format('HH:mm');\n  const onChange = value => handleChange({ ID, value });\n  return (\n    <tr className={cn('todo', { checked })}>\n      <td className=\"todo_action\">\n        <input type=\"checkbox\" onChange={() => onSelect(ID)} checked={checked} />\n      </td>\n      <td className=\"todo_id\">{ID}</td>\n      <EditableCell\n        onChange={onChange}\n        value={Title}\n        ID={ID}\n        setEditingId={setEditingId}\n        isEditing={isEditing}\n        className=\"todo_title\"\n      />\n      <td>{`${date}__${time}`}</td>\n      <td className={`todo_status ${Completed ? 'completed' : ''}`} onClick={() => toggleCompleted([ID])}>\n        {Completed.toString()}\n      </td>\n    </tr>\n  );\n};\n\nexport default Todo;\n","import React from 'react';\nimport cn from 'classnames';\n\nconst THeadCellWithSoring = ({\n  label,\n  className,\n  sortBy,\n  sortOrder,\n  sortName,\n  handleSort,\n  defaultSortOrder,\n  children,\n  ...rest\n}) => {\n  const isSorting = sortName === sortBy;\n  const classes = cn('table-cell sorting', {\n    [className]: className,\n  });\n\n  const iconClasses = cn('sort_icon', {\n    sortByCurrent: isSorting,\n    asc: sortOrder === 'asc',\n    desc: sortOrder === 'desc',\n  });\n\n  const onSort = () => {\n    let by;\n    if (isSorting) {\n      if (sortOrder === 'asc') {\n        by = 'desc';\n      } else {\n        by = 'asc';\n      }\n    } else if (defaultSortOrder) {\n      by = defaultSortOrder;\n    } else {\n      by = 'asc';\n    }\n    handleSort(sortName, by);\n  };\n  return (\n    <th {...rest} className={classes} onClick={() => onSort()}>\n      {label}\n      <span className={iconClasses}>{sortOrder === 'desc' ? '\\\\/' : '/\\\\'}</span>\n      {children}\n    </th>\n  );\n};\n\nexport default THeadCellWithSoring;\n","import React, { cloneElement } from 'react';\n\nconst renderChildrenWithProps = (components, props) => (\n  <>\n    {components.map((component, key) =>\n      cloneElement(component, {\n        ...props,\n        key,\n      })\n    )}\n  </>\n);\n\nexport default renderChildrenWithProps;\n","export const sortShouldReturn = order => (order === 'asc' ? 1 : -1);\n\nexport const standartSortCompare = order => (a, b) => {\n  if (a <= b) {\n    return -1 * sortShouldReturn(order);\n  }\n  return sortShouldReturn(order);\n};\n\nexport const sortIds = (ids, objectWithItems, sortBy, sortOrder, sortingRules) => {\n  let sorted = [...ids];\n  if (sortBy) {\n    sorted = sorted.sort((aKey, bKey) => {\n      const valueFormatter = sortingRules[sortBy];\n      const aItem = valueFormatter(objectWithItems[aKey][sortBy]);\n      const bItem = valueFormatter(objectWithItems[bKey][sortBy]);\n      return standartSortCompare(sortOrder)(aItem, bItem);\n    });\n  }\n  return sorted;\n};\n","import moment from 'moment';\n\nexport const convertArrayToString = arr => arr.map(val => `${val}`);\n\nexport const getNumberFromString = val => Number(val);\nexport const getBinaryFromString = val =>\n  Number(\n    Array.from(val.replace(' ', ''))\n      .map(each => each.charCodeAt(0).toString(2))\n      .join('')\n  );\nexport const getNumberFromDate = val => moment(val).valueOf();\nexport const getNumberFromStringBool = val => Number(JSON.parse(val));\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getTodos, changeTodoTitle, toggleTodoCompleted } from '../actions/AppActions';\nimport Todo from '../components/Todo';\nimport THeadCellWithSoring from '../common/THeadCellWithSoring';\nimport renderChildrenWithProps from '../hoc/renderChildrenWithProps';\nimport { sortIds } from '../helpers/sorting';\nimport useSorting from '../hooks/useSorting';\nimport {\n  getNumberFromString,\n  getBinaryFromString,\n  getNumberFromDate,\n  getNumberFromStringBool,\n  convertArrayToString,\n} from '../helpers/common';\n\nconst sortingRules = {\n  ID: getNumberFromString,\n  Title: getBinaryFromString,\n  DueDate: getNumberFromDate,\n  Completed: getNumberFromStringBool,\n};\n\nconst defaultSortOrder = 'desc';\n\nconst Todos = ({ todos, loading, getTodos, changeTodoTitle, toggleTodoCompleted }) => {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectedAll, setSelectedAll] = useState(false);\n  const [sortBy, sortOrder, handleSort] = useSorting(null, defaultSortOrder);\n  const [editingId, setEditingId] = useState(null);\n\n  const sortingProps = {\n    sortBy,\n    sortOrder,\n    handleSort,\n    defaultSortOrder,\n  };\n  const todosIds = Object.keys(todos);\n  const todosLength = todosIds.length;\n  const isSelected = id => selectedItems.includes(id);\n\n  useEffect(() => {\n    getTodos();\n  }, [getTodos]);\n\n  const handleSelectItem = ID => {\n    if (isSelected(ID)) {\n      setSelectedItems(selectedItems.filter(item => item !== ID));\n      setSelectedAll(false);\n    } else {\n      const newSelectedItems = [...selectedItems, ID];\n      setSelectedItems([...selectedItems, ID]);\n      if (newSelectedItems.length === todosLength) {\n        setSelectedAll(true);\n      }\n    }\n  };\n\n  const handleSelectAll = ({ target: { checked } }) => {\n    setSelectedAll(checked);\n    if (checked) {\n      setSelectedItems(todosIds.map(key => todos[key].ID));\n    } else {\n      setSelectedItems([]);\n    }\n  };\n\n  const handleSetEditing = (id = null) => setEditingId(id);\n  const handleToggleTodoCompleted = (ids = []) => toggleTodoCompleted(convertArrayToString(ids));\n  const handleToggleSelectedTodoCompleted = e => {\n    e.stopPropagation();\n    toggleTodoCompleted(convertArrayToString(selectedItems));\n  };\n\n  const sortedTodos = sortIds(todosIds, todos, sortBy, sortOrder, sortingRules);\n\n  return (\n    <table className=\"todos container\">\n      <thead>\n        <tr>\n          <th>\n            <input type=\"checkbox\" onChange={handleSelectAll} checked={selectedAll} />\n          </th>\n          {renderChildrenWithProps(\n            [\n              <THeadCellWithSoring label=\"№\" sortName=\"ID\" />,\n              <THeadCellWithSoring label=\"Название\" sortName=\"Title\" />,\n              <THeadCellWithSoring label=\"Время\" sortName=\"DueDate\" />,\n              <THeadCellWithSoring label=\"Статус\" sortName=\"Completed\" className=\"todo_header_status\">\n                {selectedItems.length ? (\n                  <button type=\"button\" onClick={handleToggleSelectedTodoCompleted} disabled={!selectedItems.length}>\n                    Изменить\n                  </button>\n                ) : null}\n              </THeadCellWithSoring>,\n            ],\n            sortingProps\n          )}\n        </tr>\n      </thead>\n      <tbody>\n        {!loading && sortedTodos.length\n          ? sortedTodos.map(key => {\n              const item = todos[key];\n              return (\n                <Todo\n                  key={item.ID}\n                  item={item}\n                  onSelect={handleSelectItem}\n                  checked={isSelected(item.ID)}\n                  handleChange={changeTodoTitle}\n                  setEditingId={handleSetEditing}\n                  isEditing={editingId === item.ID}\n                  toggleCompleted={handleToggleTodoCompleted}\n                />\n              );\n            })\n          : null}\n      </tbody>\n    </table>\n  );\n};\n\nconst mapStateToProps = ({ app }) => {\n  const { todos, loading } = app;\n  return {\n    todos,\n    loading,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTodos: () => dispatch(getTodos()),\n    changeTodoTitle: params => dispatch(changeTodoTitle(params)),\n    toggleTodoCompleted: params => dispatch(toggleTodoCompleted(params)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\n","import { useState } from 'react';\n\nexport default (defaultSortBy = null, defaultSortOrder = null) => {\n  const [sortBy, setSortBy] = useState(defaultSortBy);\n  const [sortOrder, setSortOrder] = useState(defaultSortOrder);\n\n  const handleSort = (sortName, by) => {\n    setSortBy(sortName);\n    setSortOrder(by);\n  };\n\n  return [sortBy, sortOrder, handleSort];\n};\n","import React, { lazy, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { Router, Route, Switch } from 'react-router-dom';\n// import { createBrowserHistory } from 'history';\nimport { createHashHistory } from 'history';\nimport { defaultTheme } from '../config/theme';\nimport Loader from '../common/Loader';\nimport withAuth from '../hoc/withAuth';\nimport Header from '../components/Header';\n\nimport Auth from '../pages/Auth';\nimport Todos from '../pages/Todos';\n\n// const Auth = lazy(() => import('../pages/Auth'));\n// const Todos = lazy(() => import('../pages/Todos'));\n\nexport const history = createHashHistory();\n\nconst AppRouter = ({ user }) => (\n  <Router history={history} basename=\"/green-todo\">\n    <Helmet htmlAttributes={{ class: `theme-${defaultTheme}` }} />\n    {/* <Suspense fallback={<Loader />}> */}\n    {user && <Header user={user} />}\n    <Switch>\n      <Route exact path=\"/\" component={Auth} />\n      <Route exact path=\"/todos\" component={withAuth(Todos)} />\n    </Switch>\n    {/* </Suspense> */}\n  </Router>\n);\n\nconst mapStateToProps = ({ auth }) => {\n  const { user } = auth;\n  return {\n    user,\n  };\n};\n\nexport default connect(mapStateToProps)(AppRouter);\n","import routes from './routes';\n\nexport default routes;\n","export const defaultTheme = 1;\n","import constants from '../constants/App';\n\nconst { GETTODOS, PENDING, CHANGETODOTITLE, TOGGLETODOCOMPLETED } = constants;\n\nexport const initialState = {\n  todos: {},\n  loading: false,\n};\n\nexport default function app(state = initialState, action) {\n  const { payload, type } = action;\n  if (type === GETTODOS) {\n    const todos = {};\n    payload.forEach(todo => {\n      todos[todo.ID] = todo;\n    });\n    return {\n      ...state,\n      todos,\n      loading: false,\n    };\n  }\n  if (type === PENDING) {\n    return {\n      ...state,\n      loading: true,\n    };\n  }\n  if (type === CHANGETODOTITLE) {\n    const { todos } = state;\n    return {\n      ...state,\n      todos: {\n        ...todos,\n        [payload.ID]: {\n          ...todos[payload.ID],\n          Title: payload.value,\n        },\n      },\n    };\n  }\n  if (type === TOGGLETODOCOMPLETED) {\n    const { todos } = state;\n    const newTodos = { ...todos };\n    payload.forEach(id => {\n      newTodos[id] = {\n        ...newTodos[id],\n        Completed: !newTodos[id].Completed,\n      };\n    });\n    return {\n      ...state,\n      todos: newTodos,\n    };\n  }\n  return state;\n}\n","import constants from '../constants/Auth';\n\nconst { AUTH_TOKEN, AUTH_ERROR, AUTH_USER, AUTH_REQUEST } = constants;\n\nconst initialState = {\n  loading: false,\n};\n\nexport default function auth(state = initialState, action) {\n  const { payload, type } = action;\n  if (type === AUTH_REQUEST) {\n    return {\n      ...state,\n      loading: true,\n    };\n  }\n  if (type === AUTH_TOKEN) {\n    return {\n      ...state,\n      authenticated: true,\n      loading: false,\n      error: '',\n    };\n  }\n  if (type === AUTH_USER) {\n    return {\n      ...state,\n      user: payload,\n    };\n  }\n  if (type === AUTH_ERROR) {\n    return {\n      ...state,\n      loading: false,\n      error: payload,\n    };\n  }\n  return state;\n}\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport auth from './auth';\n\nexport default combineReducers({\n  auth,\n  app,\n});\n","import constants from '../../constants/Auth';\nimport { getUser } from '../../actions/AuthActions';\n\nconst { AUTH_TOKEN } = constants;\n\nconst setToken = store => next => action => {\n  const { type } = action;\n  if (type === AUTH_TOKEN) {\n    const token = localStorage.getItem('token');\n    token && store.dispatch(getUser(token));\n  }\n  return next(action);\n};\n\nexport default setToken;\n","import constants from '../../constants/Auth';\nimport { history } from '../../routes/routes';\n\nconst { AUTH_USER } = constants;\n\nconst setUserInfo = () => next => action => {\n  const { type } = action;\n  if (type === AUTH_USER) {\n    history.push('/todos');\n  }\n  return next(action);\n};\n\nexport default setUserInfo;\n","import store from './store';\n\nexport default store;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\nimport setToken from './enhansers/setToken';\nimport setUserInfo from './enhansers/setUserInfo';\n\n// const composeEnhancers =\n//   !PRODUCTION && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nexport default function configureStore(initialState) {\n  const logger = createLogger();\n  const store = createStore(rootReducer, initialState, compose(applyMiddleware(thunk, logger, setToken, setUserInfo)));\n\n  // module.hot?.accept('../reducers', () => {\n  //   const nextRootReducer = require('../reducers');\n  //   store.replaceReducer(nextRootReducer);\n  // });\n  return store;\n}\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    const { error, errorInfo } = this.state;\n    const { children } = this.props;\n    if (errorInfo) {\n      return (\n        <div className=\"errorBoundary\">\n          <h2>Something went wrong.</h2>\n          <details>\n            {/* {error?.toString()} */}\n            <br />\n            {errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport AppRouter from '../routes';\nimport configureStore from '../store';\nimport constants from '../constants/Auth';\nimport ErrorBoundary from '../hoc/ErrorBoundary';\n\nconst { AUTH_TOKEN } = constants;\n\nexport const store = configureStore();\n\nconst token = localStorage.getItem('token');\n\nif (token) {\n  store.dispatch({ type: AUTH_TOKEN });\n}\n\nconst App = () => {\n  return (\n    <ErrorBoundary>\n      <Provider store={store}>\n        <AppRouter />\n      </Provider>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.sass';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}